# docker-compose.yml - Development
name: dataviz-dev

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.python
      args:
        APP_USERNAME: "${APP_USERNAME}"
        DATA_PATH: "${DATA_PATH}"
        APP_PATH: "${APP_PATH}"
        UPLOAD_DIR: "${UPLOAD_DIR}"
    container_name: python-backend
    ports:
      - "${FLASK_PORT}:${FLASK_PORT}"
    volumes:
      - ./data:/data
      - ./app:/app  # Keep for development hot-reloading; remove in prod
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "${VUE_APP_API_BASE_URL}${API_BASE_URL}/health"]
      interval: 3s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.75'
    user: ${APP_USERNAME}:${APP_USERNAME}
    security_opt:
      - no-new-privileges:true
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.vue
      args:
        NODE_ENV: "${NODE_ENV}"
    container_name: vue-frontend
    ports:
      - "${VUE_PORT}:${VUE_PORT}"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Keep for development dependencies
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${VUE_PORT}"]
      interval: 3s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
    command: npm run serve
    depends_on:
      backend:
        condition: service_healthy

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450