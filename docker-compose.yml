# docker-compose.yml - Production (Build)
name: dataviz-prod

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.python
      args:
        # Dockerfile Imports
        APP_USERNAME: "${APP_USERNAME}"
        DATA_PATH: "${DATA_PATH}"
        APP_PATH: "${APP_PATH}"
        UPLOAD_DIR: "${UPLOAD_DIR}"
        # Local variables for build
        NETWORK_NAME: "${NETWORK_NAME}"
        HEALTH_CHECK: "${HEALTH_CHECK}"
    container_name: python-backend.bd
    ports:
      - "${FLASK_PORT}:${FLASK_PORT}"
    volumes:
      - ./data:${DATA_PATH}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "${VUE_APP_BASE_URL}:${FLASK_PORT}${API_BASE_URL}${HEALTH_CHECK}"]
      interval: 3s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.75'
    user: ${APP_USERNAME}:${APP_USERNAME}
    security_opt:
      - no-new-privileges:true
    networks:
      - ${NETWORK_NAME}
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.vue
      args:
        # Dockerfile imports
        NODE_ENV: "${NODE_ENV}"
        APP_PATH: "${APP_PATH}"
        HOST: "${HOST}"
        VUE_PORT: "${VUE_PORT}"
        # Local use for healthcheck
        BASE_URL: "${VUE_APP_BASE_URL}"
        NETWORK_NAME: "${NETWORK_NAME}"
    container_name: vue-frontend.bd
    ports:
      - "${VUE_PORT}:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "${VUE_APP_BASE_URL}:${VUE_PORT}"]
      interval: 3s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    networks:
      - ${NETWORK_NAME}
    env_file:
      - .env
    environment:
      - HOST=${HOST}
    depends_on:
      backend:
        condition: service_healthy

networks:
  app-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450